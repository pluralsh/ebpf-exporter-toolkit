name: CD

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'

jobs:
  build:
    name: Build for ${{ matrix.platform }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runs-on: ubuntu-latest
            arch: amd64
          - platform: linux/arm64
            runs-on: ubuntu-24.04-arm
            arch: arm64
    outputs:
      # Pass build metadata to the manifest job
      imageName: ${{ steps.prep.outputs.imageName }}
      sha: ${{ steps.prep.outputs.sha }}
      gitTag: ${{ steps.prep.outputs.gitTag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build dist directory
        run: make build

      - name: Prepare metadata
        id: prep
        run: |
          REPO="${{ github.repository }}"
          SHA="${{ github.sha }}"
          echo "imageName=${REPO,,}" >> $GITHUB_OUTPUT
          echo "sha=${SHA}" >> $GITHUB_OUTPUT
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "gitTag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "gitTag=" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build platform-specific image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          load: false
          platforms: ${{ matrix.platform }}
          tags: ghcr.io/${{ github.repository }}:${{ matrix.arch }}-cache
          outputs: type=registry,push=false
          cache-from: type=gha,scope=${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=${{ matrix.platform }}

  merge-manifests:
    name: Push Multi-Arch Image
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create tag list
        id: tags
        run: |
          TAGS="ghcr.io/${{ needs.build.outputs.imageName }}:latest,ghcr.io/${{ needs.build.outputs.imageName }}:${{ needs.build.outputs.sha }}"
          if [[ "${{ needs.build.outputs.gitTag }}" != "" ]]; then
            TAGS="${TAGS},ghcr.io/${{ needs.build.outputs.imageName }}:${{ needs.build.outputs.gitTag }}"
          fi
          echo "value=${TAGS}" >> $GITHUB_OUTPUT

      - name: Create and push multi-platform manifest
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.tags.outputs.value }}
          platforms: linux/amd64,linux/arm64
          cache-from: |
            type=gha,scope=linux/amd64
            type=gha,scope=linux/arm64
